name: CI-CD PR

on:
  pull_request:
    branches:
      - main
      - env-test
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: install project + test deps (editable)
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install -U pip
          # brings in pytest, ruff, import-linter, pyyaml, etc. from pyproject optional deps
          python -m pip install -e .[test]

      - name: architecture contracts (Import Linter)
        shell: bash
        run: |
          set -euo pipefail
          rm -rf .import_linter_cache || true
          lint-imports --config .importlinter --show-timings

      - name: run tests (use pytest.ini addopts)
        shell: bash
        run: |
          set -euo pipefail
          python -m pytest

      - name: upload html report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov
          if-no-files-found: ignore

  build:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: build sdist + wheel
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install -U pip build
          python -m build --sdist --wheel

      - name: upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  smoke:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: offline install from dist (verify wheel contents first)
        shell: bash
        run: |
          set -euo pipefail
          echo "listing dist/"
          ls -lah dist
          WHEEL="$(ls dist/mug-*.whl 2>/devnull | head -n1 || true)"
          if [[ -z "${WHEEL}" ]]; then
            echo "wheel file not found: dist/mug-*.whl"
            exit 1
          fi
          echo "checking wheel contains 'mug/cli/__init__.py'..."
          if ! unzip -p "${WHEEL}" "mug/cli/__init__.py" >/dev/null 2>&1; then
            echo "ERROR: wheel is missing 'mug/cli/__init__.py'"
            unzip -l "${WHEEL}" || true
            exit 1
          fi
          echo "installing wheel: ${WHEEL}"
          python -m pip install --no-index --no-deps --force-reinstall "${WHEEL}"
          echo "showing wheel contents (non-fatal)"
          unzip -l "${WHEEL}" || true

      - name: smoke test (import + where)
        shell: bash
        run: |
          set -euo pipefail
          python -c $'import importlib\nm=importlib.import_module("mug.cli")\nprint("module file:", getattr(m,"__file__","<no __file__>"))'
